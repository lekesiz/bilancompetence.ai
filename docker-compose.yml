version: '3.9'\n\nservices:\n  # ============================================\n  # PostgreSQL Database\n  # ============================================\n  postgres:\n    image: postgres:15-alpine\n    container_name: bilancompetence-postgres\n    environment:\n      POSTGRES_USER: ${DB_USER:-postgres}\n      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}\n      POSTGRES_DB: ${DB_NAME:-bilancompetence}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"5432:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U ${DB_USER:-postgres}\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n    networks:\n      - bilancompetence\n\n  # ============================================\n  # Redis Cache\n  # ============================================\n  redis:\n    image: redis:7-alpine\n    container_name: bilancompetence-redis\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - redis_data:/data\n    command: redis-server --appendonly yes\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n    networks:\n      - bilancompetence\n\n  # ============================================\n  # Backend API\n  # ============================================\n  backend:\n    build:\n      context: .\n      dockerfile: Dockerfile.backend\n    container_name: bilancompetence-backend\n    environment:\n      NODE_ENV: ${NODE_ENV:-development}\n      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-bilancompetence}\n      REDIS_URL: redis://redis:6379\n      SUPABASE_URL: ${SUPABASE_URL}\n      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}\n      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}\n      JWT_SECRET: ${JWT_SECRET}\n      SENDGRID_API_KEY: ${SENDGRID_API_KEY}\n      SENDGRID_FROM_EMAIL: ${SENDGRID_FROM_EMAIL}\n      APP_URL: ${APP_URL:-http://localhost:3000}\n      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}\n    ports:\n      - \"3001:3001\"\n    depends_on:\n      postgres:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n    volumes:\n      - ./apps/backend/src:/app/src\n      - ./logs:/app/logs\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:3001/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 20s\n    networks:\n      - bilancompetence\n\n  # ============================================\n  # Frontend Web App\n  # ============================================\n  frontend:\n    build:\n      context: ./apps/frontend\n      dockerfile: Dockerfile\n      args:\n        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001/api}\n        NEXT_PUBLIC_REALTIME_URL: ${NEXT_PUBLIC_REALTIME_URL:-http://localhost:3001}\n    container_name: bilancompetence-frontend\n    environment:\n      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001/api}\n      NEXT_PUBLIC_REALTIME_URL: ${NEXT_PUBLIC_REALTIME_URL:-http://localhost:3001}\n      NEXT_PUBLIC_GA_MEASUREMENT_ID: ${NEXT_PUBLIC_GA_MEASUREMENT_ID}\n    ports:\n      - \"3000:3000\"\n    depends_on:\n      - backend\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:3000\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n    networks:\n      - bilancompetence\n\n  # ============================================\n  # Nginx Reverse Proxy\n  # ============================================\n  nginx:\n    image: nginx:alpine\n    container_name: bilancompetence-nginx\n    volumes:\n      - ./scripts/nginx.conf:/etc/nginx/nginx.conf:ro\n      - ./scripts/ssl:/etc/nginx/ssl:ro\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    depends_on:\n      - backend\n      - frontend\n    networks:\n      - bilancompetence\n\nvolumes:\n  postgres_data:\n    driver: local\n  redis_data:\n    driver: local\n\nnetworks:\n  bilancompetence:\n    driver: bridge\n