name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    name: Lint & Format Check
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint || true

      - name: Check formatting
        run: npm run format:check || true

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: cd apps/backend && npm test

      - name: Generate coverage
        run: cd apps/backend && npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
        continue-on-error: true

  build:
    runs-on: ubuntu-latest
    name: Build & Type Check
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Type check
        run: npm run type-check || true

      - name: Build frontend
        run: cd apps/frontend && npm run build || true

      - name: Build backend
        run: cd apps/backend && npm run build || true

  security:
    runs-on: ubuntu-latest
    name: Security Scan
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit || true

  e2e:
    runs-on: ubuntu-latest
    name: E2E Tests (Qualiopi)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: cd apps/frontend && npm run test:e2e || true

      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/frontend/playwright-report/
          retention-days: 30

  status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, build, security, e2e]
    if: always()
    steps:
      - name: Check build status
        run: |
          echo "Pipeline completed"
          echo "Lint: ${{ needs.lint-and-format.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Security: ${{ needs.security.result }}"
          echo "E2E: ${{ needs.e2e.result }}"
